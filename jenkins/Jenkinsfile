pipeline {
	environment {
		registry = "http://128.130.39.40:5000"
		//registryCredential = 'docker-hub'
		dockerImage = ''
		dockerImage2 = ''

	}
	 
	agent none
	
	stages {
		stage('Build') {
			agent {
				docker {
					image 'maven:3-alpine'
					args '-u root'
				}
			}
			steps {
				sh 'mvn -B -DskipTests clean package'
				sh 'mvn test'
				sh './jenkins/scripts/deliver.sh'
				stash includes: 'target/my-app-1.0-SNAPSHOT.jar', name: 'ARTEFACT'
			}
		}
		stage('Build image') {
			agent{ label 'master' }
			steps {
				dir("ARTEFACT"){	
					unstash 'ARTEFACT'
				}
				sh "ls -la ${pwd()}"
				sh "ls -la ${pwd()}/ARTEFACT"
				//script{
				//	dockerImage = docker.build "jovan:1.0"				
				//}
			}	
	  	}
		stage('Push image') {
			agent{ label 'master' }
			steps{
				sh 'docker login'
				script{
					docker.withRegistry(registry) {
						dockerImage = docker.build ("jovan")
						dockerImage.push("${env.BUILD_NUMBER}")
						dockerImage.push("latest")
					}
				}
			}
		}

		stage('Deploy image') {
			agent{ label 'master' }
			steps{
				sh 'docker login'
				script{
					docker.withRegistry(registry) {
						dockerImage2 = docker.image("jovan:latest")
						dockerImage2.pull()
					}
				} 
			}
		}
		
		
		//stage('Run image'){
		//	agent{ label 'master' }
		//	steps{
		//		sh 'docker login'
		//		script{
		//			docker.withRegistry(registry) {
		//				dockerImage = docker.build "jovan:2.0"
		//				dockerImage.push()
		//			}
		//		} //mozda htttpS
		//		withKubernetes(serverUrl: "https://ip.ip.ip.ip", credentialsId: "kubeadmin") {
		//			sh 'kubectl run jovan --image=http://128.130.39.40:5000/jovan:latest --port=8080'
		//		}
		//	}
		//}
	}	
}
